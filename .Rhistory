library(swirl)
install_from_swirl("Getting and Cleaning Data")
swirl()
swirl()
mydf <- read.csv(path2csv, stringsAsFactors = FALSE)
library(swirl)
library(swirl)
swirl()
dim(mydf)
swirl()
mydf <- read.csv(path2csv, stringsAsFactors = FALSE)
dim(mydf)
head(mydf)
library(dplyr)
packageVersion("dplyr")
cran <- tbl_df(mydf)
rm("mydf")
cran
?select
select(cran, ip_id, package, country)
5:20
select(cran, r_arch:country)
select(cran, country:r_arch)
cran
select(cran, -time)
select(cran, -X:size)
select(cran, -(X:size))
-5:20
-(5:20)
select(cran, -(X:size))
filter(cran, package == "swirl")
filter(cran, r_version == "3.1.1", country == "US")
?Comparison
filter(cran, r_version <= "3.0.2", country == "IN")
filter(cran, country == "US" | country == "IN")
filter(cran, size <= 100500, r_os == "linux-gnu")
filter(cran, size <= 100500 & r_os == "linux-gnu")
filter(cran, size > 100500, r_os == "linux-gnu")
is.na(c(3,5,NA,10))
!is.na(c(3,5,NA,10))
filter(cran, !is.na(r_version))
cran2 <- select(cran, size:ip_id)
arrange(cran2, ip_id)
arrange(cran2, desc(ip_id))
arrange(cran2, package, ip_id)
arrange(cran2, country, desc(r_version), ip_id)
cran3 <- select(cran, ip_id, package, size)
cran3
mutate(cran3, size_mb = size / 2^20)
mutate(cran3, size_mb = size / 2^20, size_gb = size_mb / 2^10)
mutate(cran3, correct_size = size + 1000)
summarize(cran, avg_bytes = mean(size))
library(dplyr)
cran <- tbl_df(mydf)
rm("mydf")
cran
?group_by
by_package <- group_by(cran, package)
by_package
summarize(by_package, mean(size))
?n
submit()
pack_sum
quantile(pack_sum$count, probs = 0.99)
top_counts <- filter(pack_sum, count > 679)
top_counts
View(top_counts)
top_counts_sorted <- arrange(top_counts, desc(count))
View(top_counts_sorted)
quantile(pack_sum$unique, probs = 0.99)
top_unique <- filter(pack_sum, unique > 465)
View(top_unique)
top_unique_sorted <- arrange(top_unique, unique)
top_unique_sorted <- arrange(top_unique, desc(unique))
View(top_unique_sorted)
submit()
submit()
?chain
submit()
View(result3)
submit()
submit()
submit()
submit()
submit()
setwd("~/Development/R/ds5-reprod-rese/assignment1")
help("unz")
unzip("activity.zip")
dat <- read.csv("activity.csv")
dim(dat)
file.remove("activity.csv")
list.files()
dim(complete.cases(dat))
complete.cases(dat)
dim(dat[complete.cases(dat),])
head(dim(dat[complete.cases(dat),]))
head(dat[complete.cases(dat),])
library(dplyr)
compdat <- dat[complete.cases(dat),]
completedata <- dat[complete.cases(dat),]
ddply(completedata, "date", function(df)mean(df$steps))
by_date <- group_by(completedata, "date")
meannum <- summarise(by_date, total = mean(G))
meannum <- summarise(by_date, total = mean(steps))
meannum
by_date
by_date <- group_by(completedata, date)
by_date
meannum <- summarise(by_date, total = mean(steps))
meannum
meannum <- summarise(by_date, mean = mean(steps))
meannum
totalnum <- summarise(by_date, total = sum(steps))
dim(totalnum)
totalnum
mean(totalnum$total)
by_interval   <- group_by(completedata, interval)
mean_interval <- summarise(by_interval, mean = mean(steps))
dim(mean_interval)
plot.ts(mean_interval)
head(mean_interval)
ggplot(mean_interval, aes(interval = Interval, mean = Mean))
ggplot2(mean_interval, aes(interval = Interval, mean = Mean))
library(ggplot2)
ggplot2(mean_interval, aes(interval = Interval, mean = Mean))
ggplot(mean_interval, aes(interval = Interval, mean = Mean))
dim(dat)
dim(dat[complete.cases(dat),])
numrows(dat)
nrow(dat)
nrow(dat) - nrow(completedata)
plot(mean_interval, type="l")
dim(activity)
dim(dat)
activity <- dat
dim(activity)
activity[1,"steps"]
tstdat <- dat
tstdat[1,"steps"] <- 2
tstdat[1,]
activity[1,]
dat[1,]
head(mean_interval)
filter(mean_interval, interval == 0)
filter(mean_interval, interval == 0)[1,"mean"]
head(dat)
dim(activity)
dim(completedata)
head(mean_interval)
activity_complete <- activity
for (i in 1:nrow(activity)) {
if (is.na(activity_complete[i,"steps"])) {
activity_complete[i, "steps"] <- filter(mean_interval, interval == i)[1,"mean"]
}
}
head(activity_complete)
hist(totalnum)
hist(totalnum$total)
round(1.5)
